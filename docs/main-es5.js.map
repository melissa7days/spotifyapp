{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/album/album.component.ts","webpack:///src/app/components/album/album.component.html","webpack:///src/app/components/artist/artist.component.ts","webpack:///src/app/components/artist/artist.component.html","webpack:///src/app/components/search/search.component.ts","webpack:///src/app/components/search/search.component.html","webpack:///src/app/services/spotify.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","redirectTo","pathMatch","AppModule","enableTracing","declarations","providers","bootstrap","AlbumComponent","spotifyService","route","params","pipe","subscribe","getAuth","res","getAlbum","access_token","album","ArtistComponent","getArtist","artist","getAlbums","albums","items","SearchComponent","query","valueChanges","searchMusic","console","log","artists","results","SpotifyService","http","clientId","clientSecret","headers","append","btoa","URLSearchParams","set","body","toString","post","json","type","authToken","searchUrl","get","artistUrl","artistId","albumsUrl","albumUrl","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ArtistComponent } from './components/artist/artist.component';\nimport { AlbumComponent } from './components/album/album.component';\nimport { SearchComponent } from './components/search/search.component';\n\nconst routes: Routes = [\n  {path:'', component:SearchComponent},\n  {path:'artist/:id', component: ArtistComponent},\n  {path:'album/:id', component: AlbumComponent},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'spotify';\n}\n","<div class=\"main\">\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { SpotifyService } from './services/spotify.service';\nimport { ArtistComponent } from './components/artist/artist.component';\nimport { AlbumComponent } from './components/album/album.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SearchComponent } from './components/search/search.component';\nimport { HttpModule } from '@angular/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nconst appRoutes: Routes = [\n  {path:'', component:SearchComponent},\n  {path:'artist/:id', component: ArtistComponent},\n  {path:'album/:id', component: AlbumComponent},\n  {path:'', redirectTo: '/center', pathMatch: 'full'}\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    ArtistComponent,\n    AlbumComponent,\n    SearchComponent,\n  ],\n  imports: [\n    BrowserModule, \n    FormsModule, \n    HttpClientModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpModule,\n    ReactiveFormsModule,\n      RouterModule.forRoot(\n        appRoutes,\n        { enableTracing: true } // <-- debugging purposes only\n      )\n  ],\n  \n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from 'src/app/services/spotify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { Artist } from 'src/app/models/Artist';\nimport { Album } from 'src/app/models/Album';\n\n@Component({\n  selector: 'app-album',\n  templateUrl: './album.component.html',\n  styleUrls: ['./album.component.css']\n})\nexport class AlbumComponent implements OnInit {\n  id:string;\n  album: any;\n\n  constructor(private spotifyService:SpotifyService, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params\n    .pipe(map(params => params['id']))\n      .subscribe((id) => {\n        this.spotifyService.getAuth()\n          .subscribe(res => {\n            this.spotifyService.getAlbum(id, res.access_token)\n              .subscribe(album => {\n                this.album = album;\n              });\n          });\n      });\n  }\n}\n","<div id=\"album\" *ngIf=\"album\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <header class=\"album-header\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <div *ngIf=\"album.images.length > 0\">\n                            <img class=\"album-thumb img-circle\" src=\"{{album.images[0].url}}\">\n                        </div>\n                    </div>\n                    <div class=\"col-md-8 mt-2\">\n                        <h2 *ngIf=\"album.artists.length > 0\">\n                            <span *ngFor=\"let artist of album.artists\" style=\"color: #fff; font-size: 40px; text-align: center;\">\n                                {{artist.name}}\n                            </span>\n                        </h2>\n                        <h2 style=\"font-size: 20px; color: #fff;\">{{album.name}}</h2>\n                        <div class=\"view\">\n                            <a class=\"btn btn-primary\" href=\"{{album.external_urls.spotify}}\"target=\"_blank\">View in Spotify</a>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"album-tracks ml-3\" style=\"padding: 10px;\">\n                <h2 style=\"text-align: left; margin-top: 10px; margin-bottom: 18px;\">Album Tracks</h2>\n                <div *ngFor=\"let track of album.tracks.items\">\n                    <div class=\"card mb-2\">\n                        <div class=\"card-body\">\n                            <h5 style=\"margin-top: -20px; color: #fff; font-size: 16px; margin-bottom: 20px;\">{{track.track_number}} - {{track.name}}</h5>\n                            <div class=\"preview\">\n                                <a href=\"{{track.preview_url}}\"target=\"_blank\">Preview Track</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from 'src/app/services/spotify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { Artist } from 'src/app/models/Artist';\nimport { Album } from 'src/app/models/Album';\n\n@Component({\n  selector: 'app-artist',\n  templateUrl: './artist.component.html',\n  styleUrls: ['./artist.component.css']\n})\nexport class ArtistComponent implements OnInit {\n  id:string;\n  artist: any;\n  albums: Album[];\n\n  constructor(private spotifyService:SpotifyService, private route:ActivatedRoute) { }\n  ngOnInit() {\n    this.route.params\n    .pipe(map(params => params['id']))\n      .subscribe((id) => {\n        this.spotifyService.getAuth()\n          .subscribe(res => {\n            this.spotifyService.getArtist(id, res.access_token)\n              .subscribe(artist => {\n                this.artist = artist;\n              });\n            this.spotifyService.getAlbums(id, res.access_token)\n              .subscribe(albums => {\n                this.albums = albums.items;\n              });\n          });\n      });\n  }\n}\n","<div *ngIf=\"artist\">\n    <header class=\"artist-header fixed-top\" style=\"padding-top:8px;\">\n        <div *ngIf=\"artist.images.length > 0\">\n            <img class=\"artist-thumb img-circle\" src=\"{{artist.images[0].url}}\" style=\"margin-top: 10px; margin-left: 30px;\">\n        </div>\n        <h1 style=\"margin-top: 10px;\">{{artist.name}}</h1>\n        <p *ngIf=\"artist.genres.length > 0\">\n            Genres: <span *ngFor=\"let genre of artist.genres\">{{genre}}</span>\n        </p>\n    </header>\n    <div class=\"artist-card\" style=\"margin-top: 80px;\">\n        <div class=\"row\">\n            <div class=\"col-md-3\"*ngFor=\"let album of albums\">\n                <div class=\"card mb-4 mt-5\">\n                    <div class=\"card-body\">\n                        <div *ngIf=\"album.images.length > 0\">\n                            <img class=\"album-thumb\" src=\"{{album.images[0].url}}\">\n                            <h4 style=\"text-align: center; margin-top: 5px; margin-bottom: 5px; padding-top: 10px; padding-bottom: 10px; color: #fff; min-width: 100% !important;\">{{album.name}}</h4>\n                            <div class=\"row\">\n                                <div class=\"col-md-12\">\n                                    <div class=\"button\">\n                                        <a class=\"btn btn-default btn-block\" routerLink=\"/album/{{album.id}}\" style=\"border: 1px solid #fff;\">Album Details</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         </div>\n    </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport {SpotifyService} from '../../services/spotify.service';\nimport { FormControl } from '@angular/forms';\nimport { Artist } from 'src/app/models/Artist';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n  providers:[SpotifyService]\n})\nexport class SearchComponent implements OnInit {\n  searchStr:string;\n  results: Artist[];\n  query: FormControl = new FormControl();\n  constructor(private spotifyService:SpotifyService) { \n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  searchMusic(){\n    this.query.valueChanges\n    .pipe(debounceTime(800),\n    distinctUntilChanged()\n)\n    .subscribe(query => this.spotifyService.getAuth()\n      .subscribe(res => this.spotifyService.searchMusic(query, 'artist', res.access_token).subscribe(\n        res => {\n          console.log(res.artists.items)\n          this.results = res.artists.items\n        })\n      ));\n    /* this.spotifyService.searchMusic(this.searchStr).subscribe(query => this.spotifyService.getAuth().subscribe(res =>{\n      console.log(res.artists.items);\n    }) */\n  }\n\n}\n","\n<h1 style=\"color: #fff;\"><img src=\"https://www.freepnglogos.com/uploads/spotify-logo-png/file-spotify-logo-png-4.png\" width=\"50\" height=\"50\" style=\"margin-right: 20px;\">Need Music?</h1>\n<p>Use Spotify to browse new releases and find your favourite songs</p>\n<form>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"searchStr\"[(ngModel)]=\"searchStr\" class=\"form-control\" placeholder=\"Search Music\"(keyup)=\"searchMusic()\"[formControl]=\"query\" style=\"border-radius: 30px;\">\n    </div>\n</form>\n\n<div *ngIf=\"results\">\n    <div *ngFor=\"let res of results\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"search-res well\">\n                    <div class=\"card mb-2\">\n                        <a routerLink=\"/artist/{{res.id}}\">\n                        <div class=\"card-body\">\n                            <h4><a routerLink=\"/artist/{{res.id}}\">{{res.name}}</a></h4>\n                            <div>\n                                Genres: <span *ngFor=\"let genre of res.genres\">{{genre}}</span>\n                            </div>\n                        </div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n<router-outlet></router-outlet>","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport { map } from 'rxjs/operators'; \nimport { HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n  private searchUrl: string;\n  private artistUrl: string;\n  private albumsUrl: string;\n  private albumUrl: string;\n  private clientId: string = 'a8746fd779094aa0af12746b73a33127';\n  private clientSecret: string = '206ac18c11344af9845ac42d95c8e28a';\n  constructor(private http: Http) { }\n  getAuth = () => {\n\n    let headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.clientId + \":\" + this.clientSecret));\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n    let params: URLSearchParams = new URLSearchParams();\n    params.set('grant_type', 'client_credentials');\n    let body = params.toString();\n\n    return this.http.post('https://accounts.spotify.com/api/token', body, { headers: headers })\n    .pipe(map(res => res.json()));\n\n  }\n  searchMusic(query: string, type = 'artist', authToken: string) {\n    let headers = new Headers();\n    headers.append('Authorization', 'Bearer ' + authToken);\n\n    this.searchUrl = 'https://api.spotify.com/v1/search?query=' + query + '&offset=0&limit=20&type=' + type + '&market=US';\n\n    return this.http.get(this.searchUrl, { headers: headers })\n    .pipe(map(res => res.json()));\n  }\n  getArtist(id:string, authToken: string) {\n    let headers = new Headers();\n    headers.append('Authorization', 'Bearer ' + authToken);\n\n    this.artistUrl = 'https://api.spotify.com/v1/artists/'+id;\n\n    return this.http.get(this.artistUrl, { headers: headers })\n    .pipe(map(res => res.json()));\n  }\n  getAlbums(artistId:string, authToken: string) {\n    let headers = new Headers();\n    headers.append('Authorization', 'Bearer ' + authToken);\n\n    this.albumsUrl = 'https://api.spotify.com/v1/artists/'+artistId+'/albums';\n\n    return this.http.get(this.albumsUrl, { headers: headers })\n    .pipe(map(res => res.json()));\n  }\n  \n  getAlbum(id:string, authToken: string) {\n    let headers = new Headers();\n    headers.append('Authorization', 'Bearer ' + authToken);\n\n    this.albumUrl = 'https://api.spotify.com/v1/albums/'+id;\n\n    return this.http.get(this.albumUrl, { headers: headers })\n    .pipe(map(res => res.json()));\n  }\n\n\n/*   searchMusic(str: string, type='artist'){\n    const headers = new HttpHeaders({\n      Authorization:\n        'Bearer BQD_k4eM1dpF3LK31s4q3_-oj0gME5GxK1CZe18DPY6yugvbq4egH1RpfCY0n7svNtIVegSaTs5LZIzZClY'\n    });\n    this.searchUrl = 'https://api.spotify.com/v1/search?q='+str+'&offset=0&limit=20&type='+type+'&market=US';\n    return this.http.get(this.searchUrl).pipe(map(res => res.json()));\n  } */\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}