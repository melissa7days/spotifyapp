{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/album/album.component.ts","./src/app/components/album/album.component.html","./src/app/components/artist/artist.component.ts","./src/app/components/artist/artist.component.html","./src/app/components/search/search.component.ts","./src/app/components/search/search.component.html","./src/app/services/spotify.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ArtistComponent } from './components/artist/artist.component';\nimport { AlbumComponent } from './components/album/album.component';\nimport { SearchComponent } from './components/search/search.component';\n\nconst routes: Routes = [\n  {path:'', component:SearchComponent},\n  {path:'artist/:id', component: ArtistComponent},\n  {path:'album/:id', component: AlbumComponent},\n  {path:'', redirectTo: '/center', pathMatch: 'full'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'spotify';\n}\n","<div class=\"main\">\n  <div class=\"container\">\n    <router-outlet></router-outlet>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { SpotifyService } from './services/spotify.service';\nimport { ArtistComponent } from './components/artist/artist.component';\nimport { AlbumComponent } from './components/album/album.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { SearchComponent } from './components/search/search.component';\nimport { HttpModule } from '@angular/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ArtistComponent,\n    AlbumComponent,\n    SearchComponent,\n  ],\n  imports: [\n    BrowserModule, \n    FormsModule, \n    HttpClientModule,\n    RouterModule,\n    AppRoutingModule,\n    HttpModule,\n    ReactiveFormsModule\n  ],\n  \n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from 'src/app/services/spotify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { Artist } from 'src/app/models/Artist';\nimport { Album } from 'src/app/models/Album';\n\n@Component({\n  selector: 'app-album',\n  templateUrl: './album.component.html',\n  styleUrls: ['./album.component.css']\n})\nexport class AlbumComponent implements OnInit {\n  id:string;\n  album: any;\n\n  constructor(private spotifyService:SpotifyService, private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params\n    .pipe(map(params => params['id']))\n      .subscribe((id) => {\n        this.spotifyService.getAuth()\n          .subscribe(res => {\n            this.spotifyService.getAlbum(id, res.access_token)\n              .subscribe(album => {\n                this.album = album;\n              });\n          });\n      });\n  }\n}\n","<div id=\"album\" *ngIf=\"album\">\n    <div class=\"row\">\n        <div class=\"col-md-6\">\n            <header class=\"album-header\">\n                <div class=\"row\">\n                    <div class=\"col-md-4\">\n                        <div *ngIf=\"album.images.length > 0\">\n                            <img class=\"album-thumb img-circle\" src=\"{{album.images[0].url}}\">\n                        </div>\n                    </div>\n                    <div class=\"col-md-8 mt-2\">\n                        <h2 *ngIf=\"album.artists.length > 0\">\n                            <span *ngFor=\"let artist of album.artists\" style=\"color: #fff; font-size: 40px; text-align: center;\">\n                                {{artist.name}}\n                            </span>\n                        </h2>\n                        <h2 style=\"font-size: 20px; color: #fff;\">{{album.name}}</h2>\n                        <div class=\"view\">\n                            <a class=\"btn btn-primary\" href=\"{{album.external_urls.spotify}}\"target=\"_blank\">View in Spotify</a>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        </div>\n        <div class=\"col-md-6\">\n            <div class=\"album-tracks ml-3\" style=\"padding: 10px;\">\n                <h2 style=\"text-align: left; margin-top: 10px; margin-bottom: 18px;\">Album Tracks</h2>\n                <div *ngFor=\"let track of album.tracks.items\">\n                    <div class=\"card mb-2\">\n                        <div class=\"card-body\">\n                            <h5 style=\"margin-top: -20px; color: #fff; font-size: 16px; margin-bottom: 20px;\">{{track.track_number}} - {{track.name}}</h5>\n                            <div class=\"preview\">\n                                <a href=\"{{track.preview_url}}\"target=\"_blank\">Preview Track</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { SpotifyService } from 'src/app/services/spotify.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, debounceTime, distinctUntilChanged } from 'rxjs/operators';\nimport { FormControl } from '@angular/forms';\nimport { Artist } from 'src/app/models/Artist';\nimport { Album } from 'src/app/models/Album';\n\n@Component({\n  selector: 'app-artist',\n  templateUrl: './artist.component.html',\n  styleUrls: ['./artist.component.css']\n})\nexport class ArtistComponent implements OnInit {\n  id:string;\n  artist: any;\n  albums: Album[];\n\n  constructor(private spotifyService:SpotifyService, private route:ActivatedRoute) { }\n  ngOnInit() {\n    this.route.params\n    .pipe(map(params => params['id']))\n      .subscribe((id) => {\n        this.spotifyService.getAuth()\n          .subscribe(res => {\n            this.spotifyService.getArtist(id, res.access_token)\n              .subscribe(artist => {\n                this.artist = artist;\n              });\n            this.spotifyService.getAlbums(id, res.access_token)\n              .subscribe(albums => {\n                this.albums = albums.items;\n              });\n          });\n      });\n  }\n}\n","<div *ngIf=\"artist\">\n    <header class=\"artist-header fixed-top\" style=\"padding-top:8px;\">\n        <div *ngIf=\"artist.images.length > 0\">\n            <img class=\"artist-thumb img-circle\" src=\"{{artist.images[0].url}}\" style=\"margin-top: 10px; margin-left: 30px;\">\n        </div>\n        <h1 style=\"margin-top: 10px;\">{{artist.name}}</h1>\n        <p *ngIf=\"artist.genres.length > 0\">\n            Genres: <span *ngFor=\"let genre of artist.genres\">{{genre}}</span>\n        </p>\n    </header>\n    <div class=\"artist-card\" style=\"margin-top: 80px;\">\n        <div class=\"row\">\n            <div class=\"col-md-3\"*ngFor=\"let album of albums\">\n                <div class=\"card mb-4 mt-5\">\n                    <div class=\"card-body\">\n                        <div *ngIf=\"album.images.length > 0\">\n                            <img class=\"album-thumb\" src=\"{{album.images[0].url}}\">\n                            <h4 style=\"text-align: center; margin-top: 5px; margin-bottom: 5px; padding-top: 10px; padding-bottom: 10px; color: #fff; min-width: 100% !important;\">{{album.name}}</h4>\n                            <div class=\"row\">\n                                <div class=\"col-md-12\">\n                                    <div class=\"button\">\n                                        <a class=\"btn btn-default btn-block\" routerLink=\"/album/{{album.id}}\" style=\"border: 1px solid #fff;\">Album Details</a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n         </div>\n    </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\nimport {SpotifyService} from '../../services/spotify.service';\nimport { FormControl } from '@angular/forms';\nimport { Artist } from 'src/app/models/Artist';\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css'],\n  providers:[SpotifyService]\n})\nexport class SearchComponent implements OnInit {\n  searchStr:string;\n  results: Artist[];\n  query: FormControl = new FormControl();\n  constructor(private spotifyService:SpotifyService) { \n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  searchMusic(){\n    this.query.valueChanges\n    .pipe(debounceTime(800),\n    distinctUntilChanged()\n)\n    .subscribe(query => this.spotifyService.getAuth()\n      .subscribe(res => this.spotifyService.searchMusic(query, 'artist', res.access_token).subscribe(\n        res => {\n          console.log(res.artists.items)\n          this.results = res.artists.items\n        })\n      ));\n    /* this.spotifyService.searchMusic(this.searchStr).subscribe(query => this.spotifyService.getAuth().subscribe(res =>{\n      console.log(res.artists.items);\n    }) */\n  }\n\n}\n","\n<h1 style=\"color: #fff;\"><img src=\"https://www.freepnglogos.com/uploads/spotify-logo-png/file-spotify-logo-png-4.png\" width=\"50\" height=\"50\" style=\"margin-right: 20px;\">Need Music?</h1>\n<p>Use Spotify to browse new releases and find your favourite songs</p>\n<form>\n    <div class=\"form-group\">\n        <input type=\"text\" name=\"searchStr\"[(ngModel)]=\"searchStr\" class=\"form-control\" placeholder=\"Search Music\"(keyup)=\"searchMusic()\"[formControl]=\"query\" style=\"border-radius: 30px;\">\n    </div>\n</form>\n\n<div *ngIf=\"results\">\n    <div *ngFor=\"let res of results\">\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"search-res well\">\n                    <div class=\"card mb-2\">\n                        <a routerLink=\"/artist/{{res.id}}\">\n                        <div class=\"card-body\">\n                            <h4><a routerLink=\"/artist/{{res.id}}\">{{res.name}}</a></h4>\n                            <div>\n                                Genres: <span *ngFor=\"let genre of res.genres\">{{genre}}</span>\n                            </div>\n                        </div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport {Http, Headers} from '@angular/http';\nimport { map } from 'rxjs/operators'; \nimport { HttpHeaders } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SpotifyService {\n  private searchUrl: string;\n  private artistUrl: string;\n  private albumsUrl: string;\n  private albumUrl: string;\n  private clientId: string = 'a8746fd779094aa0af12746b73a33127';\n  private clientSecret: string = '206ac18c11344af9845ac42d95c8e28a';\n  constructor(private http: Http) { }\n  getAuth = () => {\n\n    let headers = new Headers();\n    headers.append('Authorization', 'Basic ' + btoa(this.clientId + \":\" + this.clientSecret));\n    headers.append('Content-Type', 'application/x-www-form-urlencoded');\n\n    let params: URLSearchParams = new URLSearchParams();\n    params.set('grant_type', 'client_credentials');\n    let body = params.toString();\n\n    return this.http.post('https://accounts.spotify.com/api/token', body, { headers: headers })\n    .pipe(map(res => res.json()));\n\n  }\n  searchMusic(query: string, type = 'artist', authToken: string) {\n    let headers = new Headers();\n    headers.append('Authorization', 'Bearer ' + authToken);\n\n    this.searchUrl = 'https://api.spotify.com/v1/search?query=' + query + '&offset=0&limit=20&type=' + type + '&market=US';\n\n    return this.http.get(this.searchUrl, { headers: headers })\n    .pipe(map(res => res.json()));\n  }\n  getArtist(id:string, authToken: string) {\n    let headers = new Headers();\n    headers.append('Authorization', 'Bearer ' + authToken);\n\n    this.artistUrl = 'https://api.spotify.com/v1/artists/'+id;\n\n    return this.http.get(this.artistUrl, { headers: headers })\n    .pipe(map(res => res.json()));\n  }\n  getAlbums(artistId:string, authToken: string) {\n    let headers = new Headers();\n    headers.append('Authorization', 'Bearer ' + authToken);\n\n    this.albumsUrl = 'https://api.spotify.com/v1/artists/'+artistId+'/albums';\n\n    return this.http.get(this.albumsUrl, { headers: headers })\n    .pipe(map(res => res.json()));\n  }\n  \n  getAlbum(id:string, authToken: string) {\n    let headers = new Headers();\n    headers.append('Authorization', 'Bearer ' + authToken);\n\n    this.albumUrl = 'https://api.spotify.com/v1/albums/'+id;\n\n    return this.http.get(this.albumUrl, { headers: headers })\n    .pipe(map(res => res.json()));\n  }\n\n\n/*   searchMusic(str: string, type='artist'){\n    const headers = new HttpHeaders({\n      Authorization:\n        'Bearer BQD_k4eM1dpF3LK31s4q3_-oj0gME5GxK1CZe18DPY6yugvbq4egH1RpfCY0n7svNtIVegSaTs5LZIzZClY'\n    });\n    this.searchUrl = 'https://api.spotify.com/v1/search?q='+str+'&offset=0&limit=20&type='+type+'&market=US';\n    return this.http.get(this.searchUrl).pipe(map(res => res.json()));\n  } */\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}